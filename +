<!doctype html>

<html>
<head>

<title>Cruasando la calle Simulator </title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/phaser/3.55.2/phaser.min.js"> </script>


</head>

<body>
<h1>Te Falta Calle</h1>

<script>


let screen_w = 800;
let screen_h = 600;

let offset = 5;

let car1_x = screen_w+ offset ; 
let car2_x = screen_w + offset;
let car3_x = -offset;
let car4_x = -offset;

let lane1_1 = 85 ;
let lane1_2 = 130;
let lane2_1 = 215;
let lane2_2 = 250;
let lane3_1 = 335;
let lane3_2 = 370;


let velocity = 4;


let cursors;


let config = {
	width: screen_w,
	height: screen_h,
	scene: {
		create: create ,
		update: update,
		preload:preload
	},
	 physics: {
        default: 'arcade',
        arcade: {
            debug: true
        }
    },
};


let game = new Phaser.Game(config);

function preload(){
	this.load.image('player', '/character.png');
	this.load.image('ambulance', '/ambulance.png');
	this.load.image('bus', '/bus.png');	
	this.load.image('formula', '/formula.png');
	this.load.image('green', '/green.png');
	this.load.image('bg', '/bg.png');
	
	cursors = this.input.keyboard.createCursorKeys();

	}

function create(){
	
	bg = this.add.image(400,300, "bg");
	robo = this.add.image(screen_w/2, 9*(screen_h/10), 'player');
	robo.setScale(0.4);

	ambu = this.add.image(car2_x, lane1_2, "ambulance");
	ambu.setScale(1.5);

	bus = this.add.image(car1_x,lane1_1,"bus");
	bus.setScale(1.5);

	formula = this.add.image(car4_x,lane2_2, "formula");
	formula.setScale(1.5);

	green_car = this.add.image(car3_x,lane2_1, "green");
	green_car.setScale(1.5);
	
	

	bus.flipX = true;
	ambu.flipX = true;

	let cars_col = [ambu, bus, formula, green_car];
	
	for ( let i = 0; i < cars_col.length; i++){
	this.physics.add.collider(robo, cars_col[i], function(player, car){
	console.log(car);});
	}


}
function update(){

if (cursors.up.isDown){
	robo.y -= 3;
}
if (cursors.down.isDown){
	robo.y += 3;
}if (cursors.right.isDown){
	robo.x +=3;
}if (cursors.left.isDown){
	robo.x -=3;
	}

ambu.x -= velocity; 
bus.x -=velocity ;
formula.x += velocity ;
green_car.x += velocity;


if (ambu.x <= -offset*2){

ambu.x = screen_w + offset*2;

}

if (bus.x <= -offset*2){

bus.x = screen_w + offset*2;

}


flip_cars(formula);
flip_cars(green_car);





}

function flip_cars(car){

if (car.x <= -offset*2) {



car.x = screen_w+ offset*2;
}else if(car.x > screen_w + offset){
car.x = -offset *2;

}


}

</script>	


</body>



</html>
